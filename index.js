'use strict';

import fetch from "node-fetch";
import {TOKEN} from  './config.js'
import {Telegraf} from 'telegraf'
const apikey = '4c62d4734ce269a5daa0ab6aa0dd4a82';
let url = (city) =>
    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apikey}`;

const bot = new Telegraf(TOKEN)

bot.start(ctx => {
    ctx.reply('–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫!')
})

bot.on('voice', ctx => {
    ctx.reply('–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å...')
})

bot.on('sticker', ctx => {
    ctx.reply('–•–æ—Ä–æ—à–∏–π —Å—Ç–∏–∫–µ—Ä, –∂–∞–ª—å —è –µ–≥–æ –Ω–µ –≤–∏–∂—É')
})

bot.on('edited_message', ctx => {
    ctx.reply('–ó–∞—á–µ–º –≤—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ?')
})

bot.hears('/help',ctx => {
    ctx.reply('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥, –ø–æ–≥–æ–¥–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç')
})

bot.hears('/catfact',async ctx => {
        const CatFact = async ( )=> {
            ctx.reply('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —Ñ–∞–∫—Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µüê±');
            try {
                await fetch('https://catfact.ninja/fact')
                    .then(function (resp) {
                        return resp.json()
                    })
                    .then(function (data) {
                        ctx.reply(data.fact);
                    })
            }
            catch(e){
                ctx.reply('–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è —Å–ª–æ–º–∞–ª—Å—è, –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –Ω–µ –æ—á–µ–Ω—å —Å–º—ã—à–ª–µ–Ω—ã–π')
            }
        }
    CatFact ( )
    })

bot.launch()
console.log(`My Bot started`)

bot.on('text', async (ctx) => {

    const ToCeliac = (degree) => (degree - 273).toFixed(2);

    const showWeather = (weather) => {
        const temp = ToCeliac(weather.main.temp);
        const formatData = `
           –ì–æ—Ä–æ–¥üèò: ${city},
           \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°: ${temp},
           \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üå¨: ${weather.wind.speed},
           \n–í–ª–∞–∂–Ω–æ—Å—Ç—åüí¶: ${weather.main.humidity}%`
        ctx.reply(formatData)
    };

    const FindDataForWeather = async ( city)=> {
        try {
            await fetch(url(city), {origin: 'cors'})
                .then(function (resp) {
                    return resp.json()
                }) // –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ json
                .then(function (data) {
                    showWeather(data);
                })
        }
        catch(e){
                ctx.reply('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å')
            }
    }
    const city = ctx.message.text
    FindDataForWeather( city )
})
